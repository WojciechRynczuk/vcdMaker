sudo: required
dist: trusty

python:
  - "3.5"
  
git:
  depth: 5

env:
  global:
    #COVERITY_SCAN_TOKEN
    - secure: "OtVLkLQ+O18ZOxFCVTotdxWwxOqE0HcCh7LEguFPpPOp5KX9JsBrRdN8Hq689AK+GnQVuYVHkRPdiduYq8CUoLppZy0AMus7muJp2bdnotwufOIZ0r9lqzau9F4HKcdg8LBjyoHq2gnJZgNsSlrma9AGJ8nKBlVCsOJU/2DB0zJ0ufUR92otRsbKlF0TFXC2SARHYL1fgjoJBtwtKyUkHcn5/85EZjUeZGVvvRIA1oqFN2ksHv2QSevSb4auZgi8Gz4LdkQFfWa+SYDoguMYDZCkJRg4kP/ciuAxWfulroXUyAHOGvg29AwkK7hpnFCiGCxm+mOoDousBrJymuqdblwyTzy3d84i1QZQWEAaSROuPA/cpmSPHBvx+H/YTkmdPKXp46728I1wSILOclN1icWll9KhuiDMGY48e2Zmux5SKuLTjg1wzFNrVEwLeiGT7kExWXeKdPMRo/xmH2vPDlBUVrl2z12RRinpGLW0lgG70f5EJl0K30ArNXmFfFZ775nUBokc9nVgK/bjA9t2olRlOC3tzkhgZnDYp7N/AudKeOnpsWeZEQjf9p/o7SjvMvqgbGXL6kZ74n8Jkau1nKIB+9viplLpBInxEYyMSZ/9qFZf3roYmBVYRA8v6G6PsFagYnqp4vl1zGjiO49KEW1jEF56gWKRYuYHQOaebsI="
    #Compilers
    - CC=gcc-8
    - CXX=g++-8

matrix:
  include:
    -name:"vcdMaker Tests"
     env:CODE_COVERAGE=0 OPTIONS="-DUSE_STATIC_PUGIXML=ON -DCMAKE_BUILD_TYPE=Release ."
    -name:"vcdMaker Code Coverage"
     env:CODE_COVERAGE=1 OPTIONS="-DUSE_STATIC_PUGIXML=ON -DCMAKE_BUILD_TYPE=Debug -DCODE_COVERAGE_ENABLE=ON ."

#Disable the default Travis submodule behavior.
git:
  submodules: false

addons:
  apt:
    sources:
    - ubuntu-toolchain-r-test
    packages:
    - gcc-8
    - g++-8
    - txt2man
    - doxygen
    - graphviz

  coverity_scan:
    project:
      name: vcdMaker
      version: v4.0
      description: Coverity Scan by Travis CI
    notification_email: vcdmaker@mail.com
    build_command_prepend: "cov-configure --comptype gcc --compiler g++-8 --template && cmake -DUSE_STATIC_PUGIXML=ON -DCMAKE_BUILD_TYPE=Release ."
    build_command: "make"
    branch_pattern: coverity_scan

install:
  - if [ "$CODE_COVERAGE" == "1" ]; then gem install coveralls-lcov ; fi
  - if [ "$CODE_COVERAGE" == "1" ]; then sudo apt-get -y install lcov ; fi

# Safelist - branches to be built.
branches:
  only:
  - master
  - v3_release
  - v4_release
  - coverity_scan

before_script:
  - git submodule update --init --recursive
  - cd ./sources
  - if [ "$CODE_COVERAGE" == "1" ]; then mkdir CodeCoverage ; fi
  - if [ "$CODE_COVERAGE" == "1" ]; then lcov --directory . --zerocounters ; fi


script:
  - if [ "$COVERITY_SCAN_BRANCH" != "1" ]; then cmake $OPTIONS ; fi
  - if [ "$COVERITY_SCAN_BRANCH" != "1" ]; then VERBOSE=1 make ; fi
  - if [ "$COVERITY_SCAN_BRANCH" != "1" ]; then make check ; fi

after_success:
  - if [ "$CODE_COVERAGE" == "1" ]; then find CMakeFiles -type f -name "*.gc*" -exec mv {} CodeCoverage \; ; fi
  - if [ "$CODE_COVERAGE" == "1" ]; then ls CodeCoverage ; fi
  - if [ "$CODE_COVERAGE" == "1" ]; then lcov --directory CodeCoverage --capture --output-file coverage.info ; fi
  - if [ "$CODE_COVERAGE" == "1" ]; then lcov --remove coverage.info '*/unitTests/*' '/usr/*' --output-file coverage.info ; fi
  - if [ "$CODE_COVERAGE" == "1" ]; then lcov --list coverage.info ; fi
  - if [ "$CODE_COVERAGE" == "1" ]; then coveralls-lcov --repo-token ${COVERALLS_REPO_TOKEN} coverage.info ; fi

